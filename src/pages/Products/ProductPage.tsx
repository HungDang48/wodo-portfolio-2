import React, { useState, useEffect } from 'react';
import './ProductPage.css';

interface Product {
  id: string;
  icon: string;
  title: string;
  price: string;
  description: string;
  badge?: string;
  features: string[];
  image: string[];
  formLink?: string;
  comingSoon?: boolean;
}

const ProductPage: React.FC = () => {
  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);
  const [isModalOpen, setIsModalOpen] = useState(false);

  const productDescription = `üéâ [TH√îNG B√ÅO BU√îN B√ÅN V√íNG TAY NH√ÇN √ÅI] üéâ
  üìåD·ª± √°n V√≤ng tay nh√¢n √°i l√† m·ªôt ho·∫°t ƒë·ªông g√¢y qu·ªπ b∆°Ãâi toaÃÅn WODO  thu·ªôc khu√¥n kh·ªï Tr·∫°i Th·∫ø Gi·ªõi T·ªët ƒê·∫πp H∆°n L·∫ßn 2 - Better World Camp 2, Pathfinder Scouts Vietnam.
  ‚ú®V√≤ng tay nh√¢n √°i kh√¥ng ch·ªâ l√† m·ªôt m√≥n ph·ª• ki·ªán, m√† c√≤n l√† bi·ªÉu t∆∞·ª£ng c·ªßa t√¨nh ng∆∞·ªùi, s·ª± s·∫ª chia v√† cam k·∫øt kh√¥ng ƒë·ªÉ b·∫•t k·ª≥ ai b·ªã b·ªè l·∫°i ph√≠a sau. M·ªói chi·∫øc v√≤ng tay b·∫°n s·ªü h·ªØu s·∫Ω ƒë√≥ng g√≥p tr·ª±c ti·∫øp v√†o QUYÃÉ WODO (Qu·ªπ H·ªó tr·ª£ x√¢y d·ª±ng s√¢n ch∆°i cho tr·∫ª em m·ªì c√¥i), g√≥p ph·∫ßn mang l·∫°i ni·ªÅm vui v√† hy v·ªçng cho c√°c em nh·ªè c√≥ ho√†n c·∫£nh kh√≥ khƒÉn.
ƒê√¢y kh√¥ng ch·ªâ l√† m·ªôt s·∫£n ph·∫©m, m√† c√≤n l√† c∆° h·ªôi ƒë·ªÉ lan t·ªèa y√™u th∆∞∆°ng v√† h√†nh ƒë·ªông t·ª≠ t·∫ø ƒë·∫øn c·ªông ƒë·ªìng.
üåü NGO√ÄI RA CH√öNG M√åNH S·∫ÆP RA M·∫ÆT S·∫¢N PH·∫®M KH√ÅC H√ÉY ƒê√ìN CH·ªú NH√â 
üéÅ ∆ØU ƒê√ÉI D√ÄNH RI√äNG:
‚úîÔ∏è ƒê∆°n t·ª´ 10 s·∫£n ph·∫©m: Freeship n·ªôi th√†nh HCM & Bi√™n H√≤a
‚úîÔ∏è Ship theo ƒë·ª£t cho khu v·ª±c Hu·∫ø ‚Äì ƒê√† N·∫µng 
‚úîÔ∏è ƒê∆∞·ª£c h·ªó tr·ª£ h√¨nh ·∫£nh c√πng c√°c hot idea c·ªßa to√°n WODO /-rose 
üì¶ H√åNH TH·ª®C NH·∫¨N H√ÄNG:
N·ªôi th√†nh HCM, Bi√™n H√≤a: Giao nhanh, nh·∫≠n trong ng√†y ho·∫∑c 6 ‚Äì 7 ng√†y
Hu·∫ø, ƒê√† N·∫µng: Ship t·∫≠p trung theo ƒë·ª£t, nh·∫≠n h√†ng t·∫≠n tay ho·∫∑c t·∫°i ƒëi·ªÉm t·∫≠p trung (s·∫Ω b√°o c·ª• th·ªÉ khi h√†ng v·ªÅ)
Ngo√†i ra ch√∫ng m√¨nh c√≤n h·ªó tr·ª£ nh·∫≠n h√†ng trong tr·∫°i 95 nƒÉm v√† c√°c ƒë·ª£t tr·∫°i kh√°c nhau n·ªØa, ti·∫øt ki·ªám chi ph√≠ nh·∫•t c√≥ th·ªÉ
üí° ƒê·∫∑c bi·ªát, b·∫°n c√≥ th·ªÉ r·ªß r√™ c√°c ƒë·ªôi nh√≥m trong khu v·ª±c gom ƒë∆°n chung ƒë·ªÉ v·ª´a ti·∫øt ki·ªám, v·ª´a th·∫Øt ch·∫∑t t√¨nh ƒëo√†n k·∫øt n·ªØa ƒë√≥!
üìû M·ªçi th·∫Øc m·∫Øc li√™n h·ªá ngay:
Nguy·ªÖn ƒê√¨nh Kh√°nh Ng√¢n (Tr∆∞∆°Ãâng D∆∞Ã£ AÃÅn) - SƒêT : 0399201545, Email : khanhngan1491@gmail.com
Nguy·ªÖn Ph·∫°m T∆∞·ªùng Vy (ThaÃÄnh vi√™n d∆∞Ã£ aÃÅn) ‚Äì SƒêT: 0868176774, Email:nguyenphantuongvy2104@gmail.com
üåà C√πng nhau lan t·ªèa y√™u th∆∞∆°ng ‚Äì K·∫øt n·ªëi ng√†n tr√°i tim!
#Vongtaynhanai #BWC2 #Wodo #pathfinderscoutsvietnam #SDGs`;

  const products: Product[] = [
    {
      id: 'product1',
      icon: 'üßø',
      title: 'V√≤ng tay',
      price: '25.000‚Ç´',
      description: productDescription,
      badge: 'Hot',
      features: ['Qu√† t·∫∑ng √Ω nghƒ©a', 'Lan t·ªèa y√™u th∆∞∆°ng', 'Giao h√†ng t·∫≠n n∆°i'],
      image: ['/products/v√≤ngtay/1.jpg', '/products/v√≤ngtay/2.jpg', '/products/v√≤ngtay/3.jpg', '/products/v√≤ngtay/4.jpg', '/products/v√≤ngtay/5.jpg', '/products/v√≤ngtay/6.jpg', '/products/v√≤ngtay/7.jpg', '/products/v√≤ngtay/8.jpg', '/products/v√≤ngtay/9.jpg', '/products/v√≤ngtay/10.jpg', '/products/v√≤ngtay/11.jpg', '/products/v√≤ngtay/12.jpg', '/products/v√≤ngtay/13.jpg', '/products/v√≤ngtay/14.jpg', '/products/v√≤ngtay/15.jpg', '/products/v√≤ngtay/16.jpg', '/products/v√≤ngtay/17.jpg', '/products/v√≤ngtay/18.jpg', '/products/v√≤ngtay/19.jpg', '/products/v√≤ngtay/20.jpg'].map((img) => img),
      formLink: 'https://forms.gle/u7vH4B98GfcyJtdeA'
    },
    {
      id: 'product2',
      icon: 'üîÆ',
      title: 'Anno',
      price: '25.000‚Ç´',
      description: '',
      badge: 'Coming',
      features: ['S·∫Øp ra m·∫Øt!', 'Thi·∫øt k·∫ø ƒë·ªôc quy·ªÅn', 'S·∫£n ph·∫©m gi·ªõi h·∫°n'],
      image: ['/products/anno/1.jpg'].map((img) => img),
      comingSoon: true
    }
  ];

  const openModal = (product: Product) => {
    setSelectedProduct(product);
    setIsModalOpen(true);
    document.body.style.overflow = 'hidden';
  };

  const closeModal = () => {
    setIsModalOpen(false);
    setSelectedProduct(null);
    document.body.style.overflow = 'auto';
  };

  const buyProduct = () => {
    alert('Ch·ª©c nƒÉng mua h√†ng s·∫Ω ƒë∆∞·ª£c k·∫øt n·ªëi v·ªõi backend sau!');
  };

  const scrollToSection = (sectionId: string) => {
    const element = document.getElementById(sectionId);
    if (element) {
      element.scrollIntoView({ behavior: 'smooth', block: 'start' });
    }
  };

  useEffect(() => {
    const handleScroll = () => {
      const navbar = document.querySelector('.navbar') as HTMLElement;
      if (navbar) {
        navbar.style.background =
          window.scrollY > 50 ? 'rgba(255, 255, 255, 0.98)' : 'rgba(255, 255, 255, 0.95)';
      }
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const element = entry.target as HTMLElement;
            element.style.opacity = '1';
            element.style.transform = 'translateY(0)';
          }
        });
      },
      { threshold: 0.1, rootMargin: '0px 0px -50px 0px' }
    );

    document.querySelectorAll('.product-card').forEach((card) => {
      const element = card as HTMLElement;
      element.style.opacity = '0';
      element.style.transform = 'translateY(30px)';
      element.style.transition = 'all 0.6s ease';
      observer.observe(card);
    });

    return () => observer.disconnect();
  }, []);

  return (
    <div className="page-container">
      {/* Navigation */}
      

      {/* Hero Section */}
      <section className="hero" id="home">
        <div className="hero-container">
          <h1>Kh√°m Ph√° S·∫£n Ph·∫©m ƒê·∫∑c Bi·ªát</h1>
          <p>Nh·ªØng s·∫£n ph·∫©m √Ω nghƒ©a ‚Äì gi√∫p b·∫°n lan t·ªèa y√™u th∆∞∆°ng!</p>
          <button className="cta-button" onClick={() => scrollToSection('products')}>
            Xem Ngay
          </button>
        </div>
      </section>

      {/* Products Section */}
      <section className="products" id="products">
        <div className="products-container">
          <h2 className="section-title">S·∫£n Ph·∫©m N·ªïi B·∫≠t</h2>
          <div className="products-grid">
            {products.map((product) => (
              <div key={product.id} className="product-card" onClick={() => openModal(product)}>
                {product.badge && <div className="product-badge">{product.badge}</div>}
                <div className="product-image">{product.icon}</div>
                <div className="product-info">
                  <h3 className="product-title">{product.title}</h3>
                  <div className="product-price">{product.price}</div>
                  <p className="product-description">
                    {product.description.length > 150
                      ? product.description.substring(0, 150) + '...'
                      : product.description}
                  </p>
                  <button className="product-button">Xem Chi Ti·∫øt</button>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Modal */}
      {isModalOpen && selectedProduct && (
        <div className="modal active" onClick={closeModal}>
          <div className="modal-content" onClick={(e) => e.stopPropagation()}>
            <div className="modal-header">
              <button className="close-button" onClick={closeModal}>&times;</button>
              <div className="modal-icon">{selectedProduct.icon}</div>
            </div>
            <div className="modal-body">
              <h3 className="modal-title">{selectedProduct.title}</h3>
              <div className="modal-price">{selectedProduct.price}</div>
              <div style={{ display: 'flex', overflowX: 'auto', gap: '20px', margin: '1rem 0' }}>
                {selectedProduct.image.map((imgUrl, idx) => (
                  <img
                    key={idx}
                    src={imgUrl}
                    alt={`${selectedProduct.title} ${idx + 1}`}
                    style={{ height: '300px', borderRadius: '10px', flex: '0 0 auto', width: '300px', objectFit: 'cover' }}
                  />
                ))}
              </div>
              <p className="modal-description" style={{ whiteSpace: 'pre-line' }}>
                {selectedProduct.description}
              </p>
              <div className="product-features">
                <h4 className="features-title">Th√¥ng Tin:</h4>
                <ul className="features-list">
                  {selectedProduct.features.map((feature, index) => (
                    <li key={index}>{feature}</li>
                  ))}
                </ul>
              </div>
              <div style={{ marginTop: '1rem' }}>
                {selectedProduct.comingSoon ? (
                  <p><strong>Form ƒë·∫∑t h√†ng:</strong> Coming soon!</p>
                ) : (
                  <a
                    href={selectedProduct.formLink}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="buy-button"
                  >
                    ƒê·∫∑t H√†ng Ngay
                  </a>
                )}
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default ProductPage;
